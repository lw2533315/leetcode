
# Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

# For example,
# Given 1->2->3->3->4->4->5, return 1->2->5.
# Given 1->1->1->2->3, return 2->3.



class ListNode(object):
    def __init__(self, x):
        self.val = x
        self.next = None


class Solution(object):
    def deleteDuplicates(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        
        if head == None:
            return head
        
        
        new_node = ListNode(head.val + 1)
        new_node.next = head
        head = new_node
        cur = head.next
        pre = head
        
        while cur != None:
            while cur != None and cur.val == val.next.val:
                cur = cur.next
            if (pre.next != cur.next):  #发现duplicate，紧跟while，发现duplicate
			#就处理
                pre.next = cur.next
                cur = cur.next
            else:
                pre = pre.next
                cur = cur.next
        
        return head.next
            
            
            
            
        
            
            
            
        return head.next